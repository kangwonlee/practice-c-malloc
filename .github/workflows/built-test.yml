# begin .github/workflows/build-test.yml

name: Build and Test

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true
        cache-suffix: "uv"
        cache-dependency-glob: "./requirements.txt"

    - name: Install valgrind
      run: sudo apt-get update && sudo apt-get install -y valgrind

    - name: Create venv
      run: uv venv my_env

    - name: setup environment
      id: setup
      run: |
        source my_env/bin/activate
        uv pip install -r ./requirements.txt

    - name: list packages
      id: list_pakcages
      run: |
        source my_env/bin/activate
        uv pip list

    - name: Build
      run: cmake . -DCMAKE_BUILD_TYPE=Debug && make

    - name: Run C Tests
      run: ./my_tests

    - name: Run Pytest
      if: always() # Run even if tests fail (for debugging)
      run: |
        source my_env/bin/activate
        pytest --json-report --json-report-indent=4 --json-report-file=test_results.json test/test_pointers.py

    - name: Check for Memory Leaks (Optional - using valgrind)
      if: always() # Run even if tests fail (for debugging)
      run: valgrind --leak-check=full ./my_tests

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report
        path: test_results.json

  ai-tutor:
    needs: build-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        language: [English, Korean, "Bahasa Indonesia", Chinese, French, German, Italian, Japanese, Nederlands, Norwegian, Spanish, Swedish, Thai, Vietnamese]
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-report

      - name: AI Tutor
        uses: docker://ghcr.io/kangwonlee/gemini-python-tutor:latest
        id: ai_tutor
        with:
          report-files: test_results.json    # Use the downloaded report file
          student-files: src/main.c,src/pointers.c,include/pointers.h
          readme-path: README.md
          api-key: ${{ secrets.GOOGLE_API_KEY }}
          explanation-in: ${{ matrix.language }}
        timeout-minutes: 2

# end .github/workflows/build-test.yml
