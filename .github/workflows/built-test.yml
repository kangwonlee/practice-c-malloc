# begin .github/workflows/build-test.yml

name: Build and Test

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set Image URL
      id: image
      run: |
        echo "image_url=${{ vars.CPP_PYTEST_IMAGE_MALLOC }}" >> $GITHUB_ENV

    - name: Log image URL
      run: |
        echo "Using IMAGE_URL: ${{ env.image_url }}"

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Pull Grader Image
      run: docker pull ${{ env.image_url }}

    - name: Debug Container Environment
      run: |
        docker run --rm --user 1001:1001 \
          --volume ${{ github.workspace }}:/app/workspace \
          --workdir /tests \
          ${{ env.image_url }} \
          /bin/sh -c "
            echo 'pwd:' &&
            pwd &&
            echo 'ls -l:' &&
            ls -l &&
            echo 'Contents of /app/workspace:' &&
            ls -l /app/workspace
          "

    - name: Run Build and Tests in Container
      run: |
        docker run --rm --user 1001:1001 \
          --volume ${{ github.workspace }}:/app/workspace \
          --workdir /tests \
          ${{ env.image_url }} \
          /bin/sh -c "
            cmake . -DCMAKE_BUILD_TYPE=Debug && make &&
            ./my_tests &&
            python3 -m pytest --json-report --json-report-indent=4 --json-report-file=/app/workspace/test_results.json test_pointers.py
          "

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-report
        path: test_results.json

  ai-tutor:
    needs: build-test
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-report

      - name: AI Tutor
        uses: docker://ghcr.io/kangwonlee/gemini-python-tutor:latest
        id: ai_tutor
        with:
          report-files: test_results.json    # Use the downloaded report file
          student-files: src/main.c,src/pointers.c,include/pointers.h
          readme-path: README.md
          api-key: ${{ secrets.GOOGLE_API_KEY }}
          explanation-in: Korean
        timeout-minutes: 2

# end .github/workflows/build-test.yml
